components:
  schemas:
    AssistantMessageRequest:
      additionalProperties: true
      properties:
        content:
          anyOf:
            - type: string
            - type: 'null'
          title: Content
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        role:
          const: assistant
          enum:
            - assistant
          title: Role
          type: string
        tool_calls:
          anyOf:
            - items:
                $ref: '#/components/schemas/AssistantToolCall'
              type: array
            - type: 'null'
          title: Tool Calls
      required:
        - role
      title: AssistantMessageRequest
      type: object
    AssistantToolCall:
      additionalProperties: true
      properties:
        function:
          $ref: '#/components/schemas/AssistantToolCallFunction'
        id:
          title: Id
          type: string
        type:
          const: function
          enum:
            - function
          title: Type
          type: string
      required:
        - id
        - type
        - function
      title: AssistantToolCall
      type: object
    AssistantToolCallFunction:
      additionalProperties: true
      properties:
        arguments:
          title: Arguments
          type: string
        name:
          title: Name
          type: string
      required:
        - name
        - arguments
      title: AssistantToolCallFunction
      type: object
    ChatChunkChoice:
      additionalProperties: true
      properties:
        delta:
          $ref: '#/components/schemas/ChunkResponseMessage'
        finish_reason:
          anyOf:
            - enum:
                - stop
                - length
                - content_filter
                - tool_calls
              type: string
            - type: 'null'
          title: Finish Reason
        index:
          title: Index
          type: integer
        logprobs:
          anyOf:
            - $ref: '#/components/schemas/CompletionLogProbs'
            - type: 'null'
      required:
        - delta
        - index
      title: ChatChunkChoice
      type: object
    ChatChunkResponse:
      additionalProperties: true
      examples:
        - choices:
            - delta:
                role: assistant
              index: 0
          created: 1721088719
          id: response_1721
          model: llama3.1-8b
          object: chat.completion.chunk
          system_fingerprint: '88719'
        - choices:
            - delta:
                content: 'Generative '
              index: 0
          created: 1721088719
          id: response_1721
          model: llama3.1-8b
          object: chat.completion.chunk
          system_fingerprint: '88719'
        - choices:
            - delta: {}
              finish_reason: stop
              index: 0
          created: 1721088719
          id: response_1721
          model: llama3.1-8b
          object: chat.completion.chunk
          system_fingerprint: '88719'
          time_info:
            completion_time: 0.44
            prompt_time: 0.02
            queue_time: 0.0
            total_time: 0.46
          usage:
            completion_tokens: 1020
            prompt_tokens: 40
            total_tokens: 1060
      properties:
        choices:
          anyOf:
            - items:
                $ref: '#/components/schemas/ChatChunkChoice'
              type: array
            - type: 'null'
          title: Choices
        created:
          title: Created
          type: integer
        id:
          title: Id
          type: string
        model:
          enum:
            - llama3.1-8b
            - llama3.1-70b
          title: Model
          type: string
        object:
          const: chat.completion.chunk
          enum:
            - chat.completion.chunk
          title: Object
          type: string
        service_tier:
          anyOf:
            - type: string
            - type: 'null'
          title: Service Tier
        system_fingerprint:
          title: System Fingerprint
          type: string
        time_info:
          anyOf:
            - $ref: '#/components/schemas/TimeInfo'
            - type: 'null'
        usage:
          anyOf:
            - $ref: '#/components/schemas/Usage'
            - type: 'null'
      required:
        - id
        - created
        - model
        - system_fingerprint
        - object
      title: ChatChunkResponse
      type: object
    ChatCompletionChoice:
      additionalProperties: true
      properties:
        finish_reason:
          enum:
            - stop
            - length
            - content_filter
            - tool_calls
          title: Finish Reason
          type: string
        index:
          title: Index
          type: integer
        logprobs:
          anyOf:
            - $ref: '#/components/schemas/CompletionLogProbs'
            - type: 'null'
        message:
          $ref: '#/components/schemas/CompletionResponseMessage'
      required:
        - finish_reason
        - index
        - message
      title: ChatCompletionChoice
      type: object
    ChatCompletionRequest:
      additionalProperties: true
      examples:
        - max_tokens: -1
          messages:
            - content: You are a helpful assistant running on a CS-3 hardware at Cerebras
                Systems
              role: system
            - content: What is Generative AI?
              role: user
          model: llama3.1-8b
          seed: 0
          stream: false
          temperature: 0
          top_p: 1
      properties:
        frequency_penalty:
          anyOf:
            - maximum: 2.0
              minimum: -2.0
              type: number
            - type: 'null'
          default: 0
          description: Number between -2.0 and 2.0. Positive values penalize new tokens
            based on their existing frequency in the text so far, decreasing the model's
            likelihood to repeat the same line verbatim.
          title: Frequency Penalty
        logit_bias:
          anyOf:
            - type: object
            - type: 'null'
          description: "Modify the likelihood of specified tokens appearing in the\
            \ completion.\n \n Accepts a JSON object that maps tokens (specified by\
            \ their token ID in the tokenizer) to an associated bias value from -100\
            \ to 100. Mathematically, the bias is added to the logits generated by\
            \ the model prior to sampling. The exact effect will vary per model, but\
            \ values between -1 and 1 should decrease or increase likelihood of selection;\
            \ values like -100 or 100 should result in a ban or exclusive selection\
            \ of the relevant token."
          title: Logit Bias
        logprobs:
          anyOf:
            - type: boolean
            - type: 'null'
          default: false
          description: Whether to return log probabilities of the output tokens or
            not. If true, returns the log probabilities of each output token returned
            in the content of message.
          title: Logprobs
        max_tokens:
          anyOf:
            - type: integer
            - type: 'null'
          description: The maximum number of tokens that can be generated in the chat
            completion. The total length of input tokens and generated tokens is limited
            by the model's context length.
          title: Max Tokens
        messages:
          items:
            anyOf:
              - $ref: '#/components/schemas/SystemMessageRequest'
              - $ref: '#/components/schemas/UserMessageRequest'
              - $ref: '#/components/schemas/AssistantMessageRequest'
          minItems: 1
          title: Messages
          type: array
        model:
          enum:
            - llama3.1-8b
            - llama3.1-70b
          title: Model
          type: string
        n:
          anyOf:
            - type: integer
            - type: 'null'
          default: 1
          description: How many chat completion choices to generate for each input
            message. Note that you will be charged based on the number of generated
            tokens across all of the choices. Keep n as 1 to minimize costs.
          title: N
        parallel_tool_calls:
          anyOf:
            - type: boolean
            - type: 'null'
          default: true
          title: Parallel Tool Calls
        presence_penalty:
          anyOf:
            - maximum: 2.0
              minimum: -2.0
              type: number
            - type: 'null'
          default: 0
          description: Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far, increasing the model's
            likelihood to talk about new topics.
          title: Presence Penalty
        response_format:
          anyOf:
            - $ref: '#/components/schemas/ResponseFormat'
            - type: 'null'
        seed:
          anyOf:
            - type: integer
            - type: 'null'
          description: If specified, our system will make a best effort to sample
            deterministically, such that repeated requests with the same `seed` and
            parameters should return the same result. Determinism is not guaranteed.
          title: Seed
        service_tier:
          anyOf:
            - enum:
                - auto
                - default
              type: string
            - type: 'null'
          title: Service Tier
        stop:
          anyOf:
            - type: string
            - items:
                type: string
              maxItems: 4
              type: array
            - type: 'null'
          description: Up to 4 sequences where the API will stop generating further
            tokens. The returned text will not contain the stop sequence.
          title: Stop
        stream:
          anyOf:
            - type: boolean
            - type: 'null'
          default: false
          title: Stream
        stream_options:
          anyOf:
            - $ref: '#/components/schemas/StreamOptions'
            - type: 'null'
        temperature:
          anyOf:
            - maximum: 2.0
              minimum: 0.0
              type: number
            - type: 'null'
          default: 1.0
          description: What sampling temperature to use, between 0 and 2. Higher values
            like 0.8 will make the output more random, while lower values like 0.2
            will make it more focused and deterministic. We generally recommend altering
            this or `top_p` but not both.
          title: Temperature
        tool_choice:
          anyOf:
            - enum:
                - none
                - auto
                - required
              type: string
            - $ref: '#/components/schemas/ChoiceObject'
            - type: 'null'
          title: Tool Choice
        tools:
          anyOf:
            - items:
                $ref: '#/components/schemas/Tool'
              type: array
            - type: 'null'
          title: Tools
        top_logprobs:
          anyOf:
            - maximum: 20.0
              minimum: 0.0
              type: integer
            - type: 'null'
          description: An integer between 0 and 20 specifying the number of most likely
            tokens to return at each token position, each with an associated log probability.
            logprobs must be set to true if this parameter is used.
          title: Top Logprobs
        top_p:
          anyOf:
            - maximum: 1.0
              minimum: 0.0
              type: number
            - type: 'null'
          default: 1.0
          description: An alternative to sampling with temperature, called nucleus
            sampling, where the model considers the results of the tokens with top_p
            probability mass. So 0.1 means only the tokens comprising the top 10%
            probability mass are considered. We generally recommend altering this
            or `temperature` but not both.
          title: Top P
        user:
          anyOf:
            - type: string
            - type: 'null'
          description: 'A unique identifier representing your end-user, which can
            help Cerebras to monitor and detect abuse. '
          title: User
      required:
        - messages
        - model
      title: ChatCompletionRequest
      type: object
    ChatCompletionResponse:
      additionalProperties: true
      examples:
        - choices:
            - finish_reason: stop
              index: 0
              message:
                content: "Generative AI is a subfield of artificial intelligence that\
                  \ focuses on generating new, original content, such as images, music,\
                  \ text, or videos. These models are trained on large datasets and\
                  \ learn to recognize patterns, relationships, and structures within\
                  \ the data, allowing them to generate new content that is similar\
                  \ in style, tone, or characteristics to the training data. \n \n\
                  \ Generative AI models can be categorized into two main types: Generative\
                  \ Adversarial Networks (GANs) and Variational Autoencoders (VAEs).\
                  \ GANs consist of two neural networks: a generator and a discriminator.\
                  \ The generator creates new content, while the discriminator evaluates\
                  \ the generated content and tells the generator whether it's realistic\
                  \ or not. VAEs are neural networks that learn to compress and reconstruct\
                  \ data. \n \n Generative AI has numerous applications across various\
                  \ industries, including art and design, content generation, data\
                  \ augmentation, and recommendation systems. Some examples of Generative\
                  \ AI in action include Deep Dream Generator, Amper Music, and DALL-E.\
                  \ \n \n In summary, Generative AI is a powerful technology that\
                  \ enables the creation of new, original content using machine learning\
                  \ models. It has the potential to revolutionize various industries\
                  \ and create new opportunities for artists, designers, and content\
                  \ creators."
                role: assistant
          created: 1721088719
          id: response_1721
          model: llama3.1-8b
          object: chat.completion
          system_fingerprint: '88719'
          time_info:
            completion_time: 0.44
            prompt_time: 0.02
            queue_time: 0.0
            total_time: 0.46
          usage:
            completion_tokens: 1020
            prompt_tokens: 40
            total_tokens: 1060
      properties:
        choices:
          items:
            $ref: '#/components/schemas/ChatCompletionChoice'
          minItems: 1
          title: Choices
          type: array
        created:
          title: Created
          type: integer
        id:
          title: Id
          type: string
        model:
          enum:
            - llama3.1-8b
            - llama3.1-70b
          title: Model
          type: string
        object:
          const: chat.completion
          enum:
            - chat.completion
          title: Object
          type: string
        service_tier:
          anyOf:
            - type: string
            - type: 'null'
          title: Service Tier
        system_fingerprint:
          title: System Fingerprint
          type: string
        time_info:
          $ref: '#/components/schemas/TimeInfo'
        usage:
          $ref: '#/components/schemas/Usage'
      required:
        - id
        - choices
        - created
        - model
        - system_fingerprint
        - object
        - usage
        - time_info
      title: ChatCompletionResponse
      type: object
    ChoiceObject:
      additionalProperties: true
      properties:
        function:
          $ref: '#/components/schemas/ChoiceObjectFunction'
        type:
          title: Type
          type: string
      required:
        - type
        - function
      title: ChoiceObject
      type: object
    ChoiceObjectFunction:
      additionalProperties: true
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: ChoiceObjectFunction
      type: object
    ChunkAssistantToolCall:
      additionalProperties: true
      properties:
        function:
          $ref: '#/components/schemas/AssistantToolCallFunction'
        id:
          title: Id
          type: string
        index:
          title: Index
          type: integer
        type:
          const: function
          enum:
            - function
          title: Type
          type: string
      required:
        - id
        - type
        - function
        - index
      title: ChunkAssistantToolCall
      type: object
    ChunkResponseMessage:
      additionalProperties: true
      properties:
        content:
          anyOf:
            - type: string
            - type: 'null'
          title: Content
        role:
          anyOf:
            - const: assistant
              enum:
                - assistant
              type: string
            - type: 'null'
          title: Role
        tool_calls:
          anyOf:
            - items:
                $ref: '#/components/schemas/ChunkAssistantToolCall'
              type: array
            - type: 'null'
          title: Tool Calls
      title: ChunkResponseMessage
      type: object
    CompletionLogProbs:
      additionalProperties: true
      properties:
        content:
          $ref: '#/components/schemas/LogProbsContent'
      required:
        - content
      title: CompletionLogProbs
      type: object
    CompletionResponseMessage:
      additionalProperties: true
      properties:
        content:
          anyOf:
            - type: string
            - type: 'null'
          title: Content
        role:
          const: assistant
          enum:
            - assistant
          title: Role
          type: string
        tool_calls:
          anyOf:
            - items:
                $ref: '#/components/schemas/AssistantToolCall'
              type: array
            - type: 'null'
          title: Tool Calls
      required:
        - role
      title: CompletionResponseMessage
      type: object
    ErrorChunkContent:
      additionalProperties: true
      properties:
        code:
          anyOf:
            - type: string
            - type: 'null'
          default: ''
          title: Code
        message:
          anyOf:
            - type: string
            - type: 'null'
          default: ''
          title: Message
        param:
          anyOf:
            - type: string
            - type: 'null'
          default: ''
          title: Param
        type:
          anyOf:
            - type: string
            - type: 'null'
          default: ''
          title: Type
      title: ErrorChunkContent
      type: object
    ErrorChunkResponse:
      additionalProperties: true
      properties:
        error:
          $ref: '#/components/schemas/ErrorChunkContent'
        status_code:
          title: Status Code
          type: integer
      required:
        - status_code
        - error
      title: ErrorChunkResponse
      type: object
    FunctionObject:
      additionalProperties: true
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        name:
          title: Name
          type: string
        parameters:
          anyOf:
            - $ref: '#/components/schemas/Parameters'
            - type: 'null'
      required:
        - name
      title: FunctionObject
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    LogProbsContent:
      additionalProperties: true
      properties:
        bytes:
          anyOf:
            - items:
                type: integer
              type: array
            - type: 'null'
          title: Bytes
        logprob:
          title: Logprob
          type: number
        token:
          title: Token
          type: string
        top_logprobs:
          $ref: '#/components/schemas/TopLogProbs'
      required:
        - token
        - logprob
        - top_logprobs
      title: LogProbsContent
      type: object
    Parameters:
      description: 'Represents the parameters a function accepts.

        This model is designed to be flexible to accommodate any JSON Schema.

        The key-value pairs you provide will define the parameters.'
      title: Parameters
      type: object
    ResponseFormat:
      additionalProperties: true
      properties:
        type:
          anyOf:
            - enum:
                - text
                - json_object
              type: string
            - type: 'null'
          default: text
          title: Type
      title: ResponseFormat
      type: object
    StreamOptions:
      additionalProperties: true
      properties:
        include_usage:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Include Usage
      title: StreamOptions
      type: object
    SystemMessageRequest:
      additionalProperties: true
      properties:
        content:
          title: Content
          type: string
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        role:
          const: system
          enum:
            - system
          title: Role
          type: string
      required:
        - content
        - role
      title: SystemMessageRequest
      type: object
    TextContent:
      additionalProperties: true
      properties:
        text:
          title: Text
          type: string
        type:
          const: text
          enum:
            - text
          title: Type
          type: string
      required:
        - type
        - text
      title: TextContent
      type: object
    TimeInfo:
      additionalProperties: true
      examples:
        - completion_time: 0.44
          prompt_time: 0.02
          queue_time: 0.0
          total_time: 0.46
      properties:
        completion_time:
          default: -1
          title: Completion Time
          type: number
        prompt_time:
          default: -1
          title: Prompt Time
          type: number
        queue_time:
          default: -1
          title: Queue Time
          type: number
        total_time:
          default: -1
          title: Total Time
          type: number
      title: TimeInfo
      type: object
    Tool:
      additionalProperties: true
      properties:
        function:
          $ref: '#/components/schemas/FunctionObject'
        type:
          title: Type
          type: string
      required:
        - type
        - function
      title: Tool
      type: object
    TopLogProbs:
      additionalProperties: true
      properties:
        bytes:
          anyOf:
            - items:
                type: integer
              type: array
            - type: 'null'
          title: Bytes
        logprob:
          title: Logprob
          type: number
        token:
          title: Token
          type: string
      required:
        - token
        - logprob
      title: TopLogProbs
      type: object
    Usage:
      additionalProperties: true
      examples:
        - completion_tokens: 1020
          prompt_tokens: 40
          total_tokens: 1060
      properties:
        completion_tokens:
          default: 0
          title: Completion Tokens
          type: integer
        prompt_tokens:
          default: 0
          title: Prompt Tokens
          type: integer
        total_tokens:
          default: 0
          title: Total Tokens
          type: integer
      title: Usage
      type: object
    UserMessageRequest:
      additionalProperties: true
      properties:
        content:
          anyOf:
            - type: string
            - items:
                $ref: '#/components/schemas/TextContent'
              type: array
          title: Content
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        role:
          const: user
          enum:
            - user
          title: Role
          type: string
      required:
        - content
        - role
      title: UserMessageRequest
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
info:
  title: Cerebras Cloud API
  version: 0.2.0
openapi: 3.1.0
paths:
  /v1/chat/completions:
    post:
      operationId: chat_v1_chat_completions_post
      parameters:
        - in: header
          name: X-Amz-Cf-Id
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Amz-Cf-Id
        - in: header
          name: X-delay-time
          required: false
          schema:
            anyOf:
              - type: number
              - type: 'null'
            title: X-Delay-Time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ChatCompletionResponse'
                  - $ref: '#/components/schemas/ChatChunkResponse'
                  - $ref: '#/components/schemas/ErrorChunkResponse'
                title: Response Chat V1 Chat Completions Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Chat
security:
  - HTTPBearer: []
# Git Metadata
# Timestamp: 2024-08-06 16:11:44 -0700
# Hash: d230b79242da368ab1786857901cec654c80a9c9